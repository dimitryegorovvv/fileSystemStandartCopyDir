#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <filesystem>
#include <windows.h>
#include <string>

using namespace std;
using namespace std::filesystem;

const int NUMBER_OF_OVERWRITES = 30;

// путь папки, которую нужно копировать
path path_from = { R"(D:\thrash\example)" };
// путь папки, в которую нужно копировать
string path_to_ = { R"(D:\thrash\hereTest)" };
// название папки с копиями
string name_of_directory = { R"(backup)" };



int main()
{    
    setlocale(LC_ALL, "ru");
    ShowWindow(GetConsoleWindow(), SW_HIDE); // работа программы в фоновом режиме

    for (int i = 0; i < NUMBER_OF_OVERWRITES; i++)
    {      
       

       // string half_two = half_one + "\\backup_" + to_string(i);
        path path_to = path_to_ + "\\" + name_of_directory + "_" + to_string(i);

     //   path path_from = ("D:\\thrash\\example");

        
       // path path_to = { R"(D:\thrash\hereTest\backup_)" + to_string(i) };
       // path path_to = ("D:\\thrash\\hereTest\\backup_" + to_string(i));
                
        if (!exists(path_to))
        {
            create_directories(path_to);
            copy(path_from, path_to, copy_options::recursive);
            exit(5);
        }            

    }    

    file_time_type arr[NUMBER_OF_OVERWRITES];
    for (int iu = 0; iu < NUMBER_OF_OVERWRITES; iu++)
    {
        arr[iu] = last_write_time("D:\\thrash\\hereTest\\backup_" + to_string(iu));
    }

    file_time_type min_Backup = last_write_time("D:\\thrash\\hereTest\\backup_0");
    for (int ii = 0; ii < NUMBER_OF_OVERWRITES; ii++)
    {
        if (arr[ii] < min_Backup)
        {
            min_Backup = arr[ii];
        }
    }
    cout << min_Backup << endl;
    int elem_for_overwrite;
    for (int ii = 0; ii < NUMBER_OF_OVERWRITES; ii++)
    {
        if (arr[ii] == min_Backup)
        {
            cout << "HUI this -> " << ii << endl;
            elem_for_overwrite = ii;
        }
    }
    remove_all("D:\\thrash\\hereTest\\backup_" + to_string(elem_for_overwrite) );
    copy("D:\\thrash\\example", "D:\\thrash\\hereTest\\backup_" 
+ to_string(elem_for_overwrite) );
    
    return 0;
}